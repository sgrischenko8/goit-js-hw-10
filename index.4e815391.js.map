{"mappings":"YAAA,IAAMA,EACJ,wECEF,IAAMC,EAASC,SAASC,cAAc,WAChCC,EAAOF,SAASC,cAAc,aAC9BE,EAASH,SAASC,cAAc,iBACtCE,EAAOC,UAAUC,IAAI,UACrB,IDDQC,ECCFC,EAAeP,SAASC,cAAc,UAe5C,SAASO,EAAuBC,GAC9B,IAAMC,EAASD,EACZE,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACV,MAAO,kBAAyBC,OAAPF,EAAG,MAASE,OAALD,EAAK,Y,IAEtCE,KAAK,IACRb,EAAOc,UAAYP,EACnBP,EAAOC,UAAUc,OAAO,UACxBnB,EAAOK,UAAUC,IAAI,S,CAcvB,SAASc,EAAwBC,GDrBjC,IAAyBC,KCsBPD,EDrBTE,MACL,wDAA2EP,OAAnBM,EAAQ,aAAeN,OAAJjB,IAE1EyB,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,IAEjBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,E,KCYbP,KAAKU,GACLJ,OAAM,SAAAC,GAGL,OAFAvB,EAAaH,UAAUc,OAAO,UAC9BnB,EAAOK,UAAUC,IAAI,UACdyB,C,IAIb,SAASG,EAAkBC,G,IACpBC,GAAQ,EAARC,GAAQ,EAARC,OAAQC,E,IAAb,I,IAAKC,E,gBAAA,IAAMC,EAANC,EAAQC,MACLC,EAAMH,EAAGG,IAETC,EAAcJ,EAAGK,OAAOlC,KAAI,SAAAC,G,IAAGkC,EAAWlC,EAAXkC,YAAaC,EAAWnC,EAAXmC,YAAajC,EAAIF,EAAJE,KAC7D,MAAO,uCAAoDC,OAAbD,EAAK,UAAmGC,OAA3F4B,EAAI,yFAAsG5B,OAAfD,EAAK,YAAmDC,OAAzC+B,EAAY,+BAAyC/B,OAAZgC,EAAY,a,IAE5N7C,EAAKe,UAAY2B,C,EANdI,EAAYd,EAAKe,OAAAC,cAAjBf,GAAAI,EAAAS,EAAQG,QAAAC,MAARjB,GAAQ,EAAAkB,EAAAL,EAAAT,E,UAARH,GAAQ,EAARC,EAAQiB,C,aAARnB,GAAQ,MAARa,EAAQO,QAARP,EAAQO,Q,YAARnB,E,MAAAC,C,EAQLtC,EAAOK,UAAUC,IAAI,S,CAvDvBE,EAAaH,UAAUC,IAAI,WDFnBC,EAAU,CACd,YAAaR,GAERwB,MAAM,GAAeP,OANb,sCAMU,KAAWA,OAART,IACzBiB,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,M,IAEjBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,E,KCJbP,KAAKf,GACLqB,OAAM,SAAAC,GAGL,OAFAvB,EAAaH,UAAUc,OAAO,UAC9BnB,EAAOK,UAAUC,IAAI,UACdyB,C,IAiBb3B,EAAOqD,iBAAiB,UAExB,SAAiBC,GACfvD,EAAKe,UAAY,GACjBlB,EAAOK,UAAUc,OAAO,UACxBX,EAAaH,UAAUC,IAAI,UAE3Bc,EADkBsC,EAAMC,OAAOhB,M,IAyBjCvB,G","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const API =\n  'live_n3UYEOgHq1vulPu4bhOr8XCLL7jQR50Uo632WcRjJ8pnjA6EZHNLsozH2JROaIOA';\n\nconst BASE_URL = 'https://api.thecatapi.com/v1/breeds';\n\nfunction fetchBreeds() {\n  const paramse = {\n    'x-api-key': API,\n  };\n  return fetch(`${BASE_URL}?${paramse}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nexport { fetchBreeds };\n\nfunction fetchCatByBreed(breedId) {\n  return fetch(\n    `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}&api_key=${API}`\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nexport { fetchCatByBreed };\n","import { fetchBreeds } from './cat-api';\nimport { fetchCatByBreed } from './cat-api';\n\nconst loader = document.querySelector('.loader');\nconst info = document.querySelector('.cat-info');\nconst select = document.querySelector('.breed-select');\nselect.classList.add('hidden');\nconst errorMessage = document.querySelector('.error');\nerrorMessage.classList.add('hidden');\n\n// Creating starting markup for selector\nfunction renderStartingMarkup() {\n  fetchBreeds()\n    .then(renderListOfCatsMarkup)\n    .catch(error => {\n      errorMessage.classList.remove('hidden');\n      loader.classList.add('hidden');\n      return error;\n    });\n}\nrenderStartingMarkup();\n\nfunction renderListOfCatsMarkup(cats) {\n  const markup = cats\n    .map(({ id, name }) => {\n      return `<option value=\"${id}\">${name}</option>`;\n    })\n    .join('');\n  select.innerHTML = markup;\n  select.classList.remove('hidden');\n  loader.classList.add('hidden');\n}\n\n// Creating markup for chosen cat\nselect.addEventListener('change', handler);\n\nfunction handler(event) {\n  info.innerHTML = '';\n  loader.classList.remove('hidden');\n  errorMessage.classList.add('hidden');\n  const nameOfCat = event.target.value;\n  renderSelectedCatMarkup(nameOfCat);\n}\n\nfunction renderSelectedCatMarkup(cat) {\n  fetchCatByBreed(cat)\n    .then(renderDescrMarkup)\n    .catch(error => {\n      errorMessage.classList.remove('hidden');\n      loader.classList.add('hidden');\n      return error;\n    });\n}\n\nfunction renderDescrMarkup(descr) {\n  for (const el of descr) {\n    const url = el.url;\n\n    const descrMarkup = el.breeds.map(({ description, temperament, name }) => {\n      return `<div class=\"img-container\"><img alt=${name} src=\"${url}\" height=\"300\"/></div><div class=\"descr-container\"><h2 class=\"descr-container-title\">${name}</h2><p>${description}</p><p><b>Temperament: </b>${temperament}</p></div>`;\n    });\n    info.innerHTML = descrMarkup;\n  }\n  loader.classList.add('hidden');\n}\nrenderSelectedCatMarkup();\n"],"names":["$ae0c329fb0fb36dc$var$API","$b8f9b7833fa37166$var$loader","document","querySelector","$b8f9b7833fa37166$var$info","$b8f9b7833fa37166$var$select","classList","add","paramse","$b8f9b7833fa37166$var$errorMessage","$b8f9b7833fa37166$var$renderListOfCatsMarkup","cats","markup","map","param","id","name","concat","join","innerHTML","remove","$b8f9b7833fa37166$var$renderSelectedCatMarkup","cat","breedId","fetch","then","response","ok","Error","status","json","catch","error","console","log","$b8f9b7833fa37166$var$renderDescrMarkup","descr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step1","el","_step","value","url","descrMarkup","breeds","description","temperament","_iterator","Symbol","iterator","next","done","_loop","err","return","addEventListener","event","target"],"version":3,"file":"index.4e815391.js.map"}